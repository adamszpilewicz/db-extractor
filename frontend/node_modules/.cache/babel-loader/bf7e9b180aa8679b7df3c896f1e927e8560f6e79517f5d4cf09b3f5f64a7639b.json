{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-65e68622\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container mt-4\"\n};\nconst _hoisted_2 = {\n  class: \"shadow p-4 bg-white rounded\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"mb-3\"\n}, \"Database Information\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"card-header custom-header\"\n};\nconst _hoisted_6 = {\n  class: \"list-group list-group-flush\"\n};\nconst _hoisted_7 = {\n  class: \"list-group-item\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.loadDBInfo && $options.loadDBInfo(...args)),\n    class: \"btn btn-primary mb-3\"\n  }, \"Reload\"), _hoisted_4, _createCommentVNode(\" Card to display the database info \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.dbInfo, (value, key) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"card mb-3\",\n      key: key\n    }, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"strong\", null, _toDisplayString(key), 1 /* TEXT */)]), _createElementVNode(\"ul\", _hoisted_6, [_createElementVNode(\"li\", _hoisted_7, _toDisplayString($options.getDisplayValue(value)), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","onClick","_cache","args","$options","loadDBInfo","_hoisted_4","_createCommentVNode","_Fragment","_renderList","$data","dbInfo","value","key","_hoisted_5","_toDisplayString","_hoisted_6","_hoisted_7","getDisplayValue"],"sources":["/Users/adamszpilewicz/Documents/languages/golang/vue-app/database-extractor-app/frontend/src/components/AppInfo.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-4\">\n    <div class=\"shadow p-4 bg-white rounded\">\n      <h1 class=\"mb-3\">Database Information</h1>\n      <button @click=\"loadDBInfo\" class=\"btn btn-primary mb-3\">Reload</button>\n      <hr>\n\n      <!-- Card to display the database info -->\n      <div class=\"card mb-3\" v-for=\"(value, key) in dbInfo\" :key=\"key\">\n        <div class=\"card-header custom-header\">\n          <strong>{{ key }}</strong>\n        </div>\n        <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item\">{{ getDisplayValue(value) }}</li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      dbInfo: {}\n    };\n  },\n  beforeMount() {\n    this.loadDBInfo();\n  },\n  methods: {\n    loadDBInfo() {\n      const creds = this.$store.state.credentials;\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(creds)\n      };\n\n      fetch('http://localhost:8081/dbinfo', requestOptions)\n          .then(response => response.json())\n          .then(data => {\n            this.dbInfo = data.data; // use the \"data\" property from the response\n          })\n          .catch(error => console.error('Error fetching database info:', error));\n    },\n    getDisplayValue(value) {\n      if (value && value.Valid) {\n        return value.String;\n      }\n      return value;\n    }\n  }\n}\n</script>\n\n<style scoped>\n.card {\n  margin-bottom: 10px;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAA6B;gEACtCC,mBAAA,CAA0C;EAAtCD,KAAK,EAAC;AAAM,GAAC,sBAAoB;gEAErCC,mBAAA,CAAI;;EAIGD,KAAK,EAAC;AAA2B;;EAGlCA,KAAK,EAAC;AAA6B;;EACjCA,KAAK,EAAC;AAAiB;;uBAZnCE,mBAAA,CAgBM,OAhBNC,UAgBM,GAfJF,mBAAA,CAcM,OAdNG,UAcM,GAbJC,UAA0C,EAC1CJ,mBAAA,CAAwE;IAA/DK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;IAAER,KAAK,EAAC;KAAuB,QAAM,GAC/DW,UAAI,EAEJC,mBAAA,uCAA0C,G,kBAC1CV,mBAAA,CAOMW,SAAA,QAAAC,WAAA,CAPwCC,KAAA,CAAAC,MAAM,GAArBC,KAAK,EAAEC,GAAG;yBAAzChB,mBAAA,CAOM;MAPDF,KAAK,EAAC,WAAW;MAAiCkB,GAAG,EAAEA;QAC1DjB,mBAAA,CAEM,OAFNkB,UAEM,GADJlB,mBAAA,CAA0B,gBAAAmB,gBAAA,CAAfF,GAAG,iB,GAEhBjB,mBAAA,CAEK,MAFLoB,UAEK,GADHpB,mBAAA,CAA6D,MAA7DqB,UAA6D,EAAAF,gBAAA,CAA9BX,QAAA,CAAAc,eAAe,CAACN,KAAK,kB"},"metadata":{},"sourceType":"module","externalDependencies":[]}