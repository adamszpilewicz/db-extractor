{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  class: \"col\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"mt-5\"\n}, \"Schemas\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"table table-bordered\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Schema Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Table\")])], -1 /* HOISTED */);\nconst _hoisted_8 = [\"rowspan\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _hoisted_5, _createCommentVNode(\" Table to display the schemas \"), _createElementVNode(\"table\", _hoisted_6, [_hoisted_7, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.schemas.data, schema => {\n    return _openBlock(), _createElementBlock(_Fragment, null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(schema.table_names, (table, index) => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: schema.schema_name + index\n      }, [index === 0 ? (_openBlock(), _createElementBlock(\"td\", {\n        key: 0,\n        rowspan: schema.table_names.length\n      }, _toDisplayString(schema.schema_name), 9 /* TEXT, PROPS */, _hoisted_8)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"td\", null, _toDisplayString(table), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))], 64 /* STABLE_FRAGMENT */);\n  }), 256 /* UNKEYED_FRAGMENT */))])])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_createCommentVNode","_hoisted_6","_hoisted_7","_Fragment","_renderList","$data","schemas","data","schema","table_names","table","index","key","schema_name","rowspan","length","_hoisted_8","_toDisplayString"],"sources":["/Users/adamszpilewicz/Documents/languages/golang/vue-app/database-extractor-app/frontend/src/components/AppSchemas.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <h1 class=\"mt-5\">Schemas</h1>\n        <hr>\n\n        <!-- Table to display the schemas -->\n        <table class=\"table table-bordered\">\n          <thead>\n          <tr>\n            <th>Schema Name</th>\n            <th>Table</th>\n          </tr>\n          </thead>\n          <tbody>\n          <template v-for=\"schema in schemas.data\">\n            <tr v-for=\"(table, index) in schema.table_names\" :key=\"schema.schema_name + index\">\n              <td v-if=\"index === 0\" :rowspan=\"schema.table_names.length\">{{ schema.schema_name }}</td>\n              <td>{{ table }}</td>\n            </tr>\n          </template>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\n\n\nexport default {\n  data() {\n    return {\n      schemas: []\n    }\n  },\n  beforeMount() {\n    const creds = this.$store.state.credentials;\n    const requestOptions = {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify(creds)\n    };\n\n    console.log(\"Request options: \", requestOptions);\n\n    fetch('http://localhost:8081/schemas', requestOptions)\n        .then(response => response.json())\n        .then(response => {\n          this.schemas = response\n        })\n        .catch(error => console.log(error))\n  }\n}\n</script>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAK;;EACTA,KAAK,EAAC;AAAK;gCACdC,mBAAA,CAA6B;EAAzBD,KAAK,EAAC;AAAM,GAAC,SAAO;gCACxBC,mBAAA,CAAI;;EAGGD,KAAK,EAAC;AAAsB;gCACjCC,mBAAA,CAKQ,gB,aAJRA,mBAAA,CAGK,a,aAFHA,mBAAA,CAAoB,YAAhB,aAAW,G,aACfA,mBAAA,CAAc,YAAV,OAAK,E;;;uBAXnBC,mBAAA,CAyBM,OAzBNC,UAyBM,GAxBJF,mBAAA,CAuBM,OAvBNG,UAuBM,GAtBJH,mBAAA,CAqBM,OArBNI,UAqBM,GApBJC,UAA6B,EAC7BC,UAAI,EAEJC,mBAAA,kCAAqC,EACrCP,mBAAA,CAeQ,SAfRQ,UAeQ,GAdNC,UAKQ,EACRT,mBAAA,CAOQ,iB,kBANRC,mBAAA,CAKWS,SAAA,QAAAC,WAAA,CALgBC,KAAA,CAAAC,OAAO,CAACC,IAAI,EAAtBC,MAAM;kFACrBd,mBAAA,CAGKS,SAAA,QAAAC,WAAA,CAHwBI,MAAM,CAACC,WAAW,GAAnCC,KAAK,EAAEC,KAAK;2BAAxBjB,mBAAA,CAGK;QAH6CkB,GAAG,EAAEJ,MAAM,CAACK,WAAW,GAAGF;UAChEA,KAAK,U,cAAfjB,mBAAA,CAAyF;;QAAjEoB,OAAO,EAAEN,MAAM,CAACC,WAAW,CAACM;0BAAWP,MAAM,CAACK,WAAW,wBAAAG,UAAA,K,mCACjFvB,mBAAA,CAAoB,YAAAwB,gBAAA,CAAbP,KAAK,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}