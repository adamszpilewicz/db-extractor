{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  class: \"col\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"mt-5\"\n}, \"Login\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"submit\",\n  class: \"btn btn-primary\",\n  value: \"Login\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache) {\n  const _component_text_input = _resolveComponent(\"text-input\");\n  const _component_form_tag = _resolveComponent(\"form-tag\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _hoisted_5, _createVNode(_component_form_tag, {\n    onMyevent: _ctx.submitHandler,\n    name: \"myform\",\n    event: \"myevent\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_text_input, {\n      modelValue: _ctx.email,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.email = $event),\n      label: \"Email\",\n      type: \"email\",\n      name: \"email\",\n      required: \"true\"\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_text_input, {\n      modelValue: _ctx.host,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.host = $event),\n      label: \"Host\",\n      type: \"text\",\n      name: \"host\",\n      required: \"true\"\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_text_input, {\n      modelValue: _ctx.database,\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.database = $event),\n      label: \"Database name\",\n      type: \"text\",\n      name: \"database\",\n      required: \"true\"\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_text_input, {\n      modelValue: _ctx.user,\n      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.user = $event),\n      label: \"User name\",\n      type: \"text\",\n      name: \"user\",\n      required: \"true\"\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_text_input, {\n      modelValue: _ctx.password,\n      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.password = $event),\n      label: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      required: \"true\"\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _hoisted_6, _hoisted_7]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onMyevent\"])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","type","value","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_createVNode","_component_form_tag","onMyevent","_ctx","submitHandler","name","event","_component_text_input","email","$event","label","required","host","database","user","password","_hoisted_6","_hoisted_7"],"sources":["/Users/adamszpilewicz/Documents/languages/golang/vue-app/database-extractor-app/frontend/src/components/AppLogin.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <h1 class=\"mt-5\">Login</h1>\n        <hr>\n        <form-tag v-on:myevent=\"submitHandler\" name=\"myform\" event=\"myevent\">\n\n          <text-input\n              v-model=\"email\"\n              label=\"Email\"\n              type=\"email\"\n              name=\"email\"\n              required=\"true\">\n          </text-input>\n\n          <text-input\n              v-model=\"host\"\n              label=\"Host\"\n              type=\"text\"\n              name=\"host\"\n              required=\"true\">\n          </text-input>\n\n          <text-input\n              v-model=\"database\"\n              label=\"Database name\"\n              type=\"text\"\n              name=\"database\"\n              required=\"true\">\n          </text-input>\n\n          <text-input\n              v-model=\"user\"\n              label=\"User name\"\n              type=\"text\"\n              name=\"user\"\n              required=\"true\">\n          </text-input>\n\n          <text-input\n              v-model=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              name=\"password\"\n              required=\"true\">\n          </text-input>\n\n          <hr>\n          <input type=\"submit\" class=\"btn btn-primary\" value=\"Login\">\n        </form-tag>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport TextInput from './forms/TextInput.vue'\nimport FormTag from './forms/FormTag.vue'\nimport alert from notie\n\nexport default {\n  name: 'UserLogin',\n  components: {\n    TextInput,\n    FormTag\n  },\n  data() {\n    return {\n      email: \"\",\n      host: \"\",\n      database: \"\",\n      user: \"\",\n      password: \"\",\n    }\n  },\n  methods: {\n    submitHandler() {\n      console.log('submitHandler called - success!');\n\n      const payload = {\n        email: this.email,\n        host: this.host,\n        database: this.database,\n        user: this.user,\n        password: this.password,\n      }\n      console.log(\"Payload: \", JSON.stringify(payload));\n\n      const requestOptions = {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(payload)\n      };\n\n      fetch('http://localhost:8081/users/login', requestOptions)\n          .then(response => response.json())\n          .then(data => {\n            if (data.error) {\n              console.log(\"Error: \", data.message);\n            } else {\n              console.log(\"Success: \", data.message);\n              // this.$router.push({name: 'Home'});\n            }\n          })\n    }\n  }\n}\n</script>"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAK;;EACTA,KAAK,EAAC;AAAK;gCACdC,mBAAA,CAA2B;EAAvBD,KAAK,EAAC;AAAM,GAAC,OAAK;gCACtBC,mBAAA,CAAI;gCA2CFA,mBAAA,CAAI;gCACJA,mBAAA,CAA2D;EAApDC,IAAI,EAAC,QAAQ;EAACF,KAAK,EAAC,iBAAiB;EAACG,KAAK,EAAC;;;;;;uBAhD3DC,mBAAA,CAoDM,OApDNC,UAoDM,GAnDJJ,mBAAA,CAkDM,OAlDNK,UAkDM,GAjDJL,mBAAA,CAgDM,OAhDNM,UAgDM,GA/CJC,UAA2B,EAC3BC,UAAI,EACJC,YAAA,CA4CWC,mBAAA;IA5CIC,SAAO,EAAEC,IAAA,CAAAC,aAAa;IAAEC,IAAI,EAAC,QAAQ;IAACC,KAAK,EAAC;;sBAEzD,MAMa,CANbN,YAAA,CAMaO,qBAAA;kBALAJ,IAAA,CAAAK,KAAK;iEAALL,IAAA,CAAAK,KAAK,GAAAC,MAAA;MACdC,KAAK,EAAC,OAAO;MACblB,IAAI,EAAC,OAAO;MACZa,IAAI,EAAC,OAAO;MACZM,QAAQ,EAAC;6CAGbX,YAAA,CAMaO,qBAAA;kBALAJ,IAAA,CAAAS,IAAI;iEAAJT,IAAA,CAAAS,IAAI,GAAAH,MAAA;MACbC,KAAK,EAAC,MAAM;MACZlB,IAAI,EAAC,MAAM;MACXa,IAAI,EAAC,MAAM;MACXM,QAAQ,EAAC;6CAGbX,YAAA,CAMaO,qBAAA;kBALAJ,IAAA,CAAAU,QAAQ;iEAARV,IAAA,CAAAU,QAAQ,GAAAJ,MAAA;MACjBC,KAAK,EAAC,eAAe;MACrBlB,IAAI,EAAC,MAAM;MACXa,IAAI,EAAC,UAAU;MACfM,QAAQ,EAAC;6CAGbX,YAAA,CAMaO,qBAAA;kBALAJ,IAAA,CAAAW,IAAI;iEAAJX,IAAA,CAAAW,IAAI,GAAAL,MAAA;MACbC,KAAK,EAAC,WAAW;MACjBlB,IAAI,EAAC,MAAM;MACXa,IAAI,EAAC,MAAM;MACXM,QAAQ,EAAC;6CAGbX,YAAA,CAMaO,qBAAA;kBALAJ,IAAA,CAAAY,QAAQ;iEAARZ,IAAA,CAAAY,QAAQ,GAAAN,MAAA;MACjBC,KAAK,EAAC,UAAU;MAChBlB,IAAI,EAAC,UAAU;MACfa,IAAI,EAAC,UAAU;MACfM,QAAQ,EAAC;6CAGbK,UAAI,EACJC,UAA2D,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}