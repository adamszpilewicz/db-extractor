{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Custom Query\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"form-group mt-3\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"sqlQuery\"\n}, \"Enter your SQL Query:\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  key: 0,\n  class: \"mt-5\"\n};\nconst _hoisted_6 = {\n  class: \"table table-striped table-bordered\"\n};\nconst _hoisted_7 = {\n  class: \"thead-dark\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_loading = _resolveComponent(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"textarea\", {\n    class: \"form-control\",\n    id: \"sqlQuery\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.query = $event),\n    rows: \"4\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.query]])]), _createElementVNode(\"button\", {\n    class: \"btn btn-primary mt-3\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.sendQuery && $options.sendQuery(...args))\n  }, \"Execute\"), _createCommentVNode(\" Loading Overlay \"), _createVNode(_component_loading, {\n    active: $data.loading,\n    \"can-cancel\": false,\n    \"is-full-page\": true\n  }, null, 8 /* PROPS */, [\"active\"]), _createCommentVNode(\" Result Table \"), $data.result && $data.result.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"table\", _hoisted_6, [_createElementVNode(\"thead\", _hoisted_7, [_createElementVNode(\"tr\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(Object.keys($data.result[0]), column => {\n    return _openBlock(), _createElementBlock(\"th\", {\n      key: column\n    }, _toDisplayString(column), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.result, row => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: row.id\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(Object.keys(row), column => {\n      return _openBlock(), _createElementBlock(\"td\", {\n        key: column\n      }, _toDisplayString(row[column]), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","id","$data","query","$event","rows","onClick","_cache","args","$options","sendQuery","_createCommentVNode","_createVNode","_component_loading","active","loading","result","length","_hoisted_5","_hoisted_6","_hoisted_7","_Fragment","_renderList","Object","keys","column","key","_toDisplayString","row"],"sources":["/Users/adamszpilewicz/Documents/languages/golang/vue-app/database-extractor-app/frontend/src/components/AppCustomQuery.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <h2>Custom Query</h2>\n    <div class=\"form-group mt-3\">\n      <label for=\"sqlQuery\">Enter your SQL Query:</label>\n      <textarea class=\"form-control\" id=\"sqlQuery\" v-model=\"query\" rows=\"4\"></textarea>\n    </div>\n    <button class=\"btn btn-primary mt-3\" @click=\"sendQuery\">Execute</button>\n\n    <!-- Loading Overlay -->\n    <loading :active.sync=\"loading\" :can-cancel=\"false\" :is-full-page=\"true\"></loading>\n\n    <!-- Result Table -->\n    <div v-if=\"result && result.length\" class=\"mt-5\">\n      <table class=\"table table-striped table-bordered\">\n        <thead class=\"thead-dark\">\n        <tr>\n          <th v-for=\"column in Object.keys(result[0])\" :key=\"column\">{{ column }}</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr v-for=\"row in result\" :key=\"row.id\">\n          <td v-for=\"column in Object.keys(row)\" :key=\"column\">{{ row[column] }}</td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Loading from 'vue-loading-overlay';\nimport 'vue-loading-overlay/dist/vue-loading.css';  // Import the CSS\n\nexport default {\n  components: {\n    Loading\n  },\n  data() {\n    return {\n      query: '',\n      result: [],\n      loading: false\n    };\n  },\n  methods: {\n    async sendQuery() {\n      this.loading = true;  // Start loading spinner\n      try {\n        const creds = this.$store.state.credentials;\n        const dataToSend = {\n          credentials: creds,\n          query: this.query\n        };\n        const requestOptions = {\n          method: 'POST',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(dataToSend)\n        };\n\n        const response = await fetch('http://localhost:8081/custom-query', requestOptions);\n        const result = await response.json();\n\n        this.result = result.data;\n      } catch (error) {\n        console.error(\"Error executing query:\", error);\n      } finally {\n        this.loading = false;  // Stop loading spinner\n      }\n    }\n  }\n}\n</script>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAgB;gCACzBC,mBAAA,CAAqB,YAAjB,cAAY;;EACXD,KAAK,EAAC;AAAiB;gCAC1BC,mBAAA,CAAmD;EAA5CC,GAAG,EAAC;AAAU,GAAC,uBAAqB;;;EASTF,KAAK,EAAC;;;EACjCA,KAAK,EAAC;AAAoC;;EACxCA,KAAK,EAAC;AAAY;;;uBAd/BG,mBAAA,CA0BM,OA1BNC,UA0BM,GAzBJC,UAAqB,EACrBJ,mBAAA,CAGM,OAHNK,UAGM,GAFJC,UAAmD,E,gBACnDN,mBAAA,CAAiF;IAAvED,KAAK,EAAC,cAAc;IAACQ,EAAE,EAAC,UAAU;+DAAUC,KAAA,CAAAC,KAAK,GAAAC,MAAA;IAAEC,IAAI,EAAC;iDAAZH,KAAA,CAAAC,KAAK,E,KAE7DT,mBAAA,CAAwE;IAAhED,KAAK,EAAC,sBAAsB;IAAEa,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;KAAE,SAAO,GAE/DG,mBAAA,qBAAwB,EACxBC,YAAA,CAAmFC,kBAAA;IAAzEC,MAAM,EAAOZ,KAAA,CAAAa,OAAO;IAAG,YAAU,EAAE,KAAK;IAAG,cAAY,EAAE;uCAEnEJ,mBAAA,kBAAqB,EACVT,KAAA,CAAAc,MAAM,IAAId,KAAA,CAAAc,MAAM,CAACC,MAAM,I,cAAlCrB,mBAAA,CAaM,OAbNsB,UAaM,GAZJxB,mBAAA,CAWQ,SAXRyB,UAWQ,GAVNzB,mBAAA,CAIQ,SAJR0B,UAIQ,GAHR1B,mBAAA,CAEK,c,kBADHE,mBAAA,CAA4EyB,SAAA,QAAAC,WAAA,CAAvDC,MAAM,CAACC,IAAI,CAACtB,KAAA,CAAAc,MAAM,MAA5BS,MAAM;yBAAjB7B,mBAAA,CAA4E;MAA9B8B,GAAG,EAAED;IAAM,GAAAE,gBAAA,CAAKF,MAAM;sCAGtE/B,mBAAA,CAIQ,iB,kBAHRE,mBAAA,CAEKyB,SAAA,QAAAC,WAAA,CAFapB,KAAA,CAAAc,MAAM,EAAbY,GAAG;yBAAdhC,mBAAA,CAEK;MAFsB8B,GAAG,EAAEE,GAAG,CAAC3B;2BAClCL,mBAAA,CAA2EyB,SAAA,QAAAC,WAAA,CAAtDC,MAAM,CAACC,IAAI,CAACI,GAAG,GAAzBH,MAAM;2BAAjB7B,mBAAA,CAA2E;QAAnC8B,GAAG,EAAED;MAAM,GAAAE,gBAAA,CAAKC,GAAG,CAACH,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}