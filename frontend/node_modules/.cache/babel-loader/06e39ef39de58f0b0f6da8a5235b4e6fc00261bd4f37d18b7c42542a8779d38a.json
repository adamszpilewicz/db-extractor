{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nimport _imports_0 from '@/assets/key.png';\nconst _hoisted_1 = {\n  class: \"container mt-4\"\n};\nconst _hoisted_2 = {\n  class: \"shadow p-4 bg-white rounded\"\n};\nconst _hoisted_3 = {\n  class: \"mb-3 text-right\"\n};\nconst _hoisted_4 = {\n  class: \"table table-hover table-striped\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"thead-dark\"\n}, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Table Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Column Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Column Type\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Primary Key\")])], -1 /* HOISTED */);\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"Primary Key\",\n  style: {\n    \"height\": \"16px\",\n    \"width\": \"32px\",\n    \"vertical-align\": \"middle\"\n  }\n}, null, -1 /* HOISTED */);\nconst _hoisted_8 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Download button placed above the table \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.downloadCSV && $options.downloadCSV(...args)),\n    class: \"btn btn-primary\"\n  }, \"Download CSV\")]), _createElementVNode(\"table\", _hoisted_4, [_hoisted_5, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.columns, column => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: column.column_name\n    }, [_createElementVNode(\"td\", null, _toDisplayString($props.tableName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(column.column_name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(column.column_type), 1 /* TEXT */), _createElementVNode(\"td\", null, [column.primary_key === 'YES' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, [_hoisted_7, _createTextVNode(\" YES \")])) : (_openBlock(), _createElementBlock(\"span\", _hoisted_8, \"NO\"))])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])]);\n}","map":{"version":3,"names":["_imports_0","class","_createElementVNode","src","alt","style","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","_hoisted_3","onClick","_cache","args","$options","downloadCSV","_hoisted_4","_hoisted_5","_Fragment","_renderList","$data","columns","column","key","column_name","_toDisplayString","$props","tableName","column_type","primary_key","_hoisted_6","_hoisted_7","_hoisted_8"],"sources":["/Users/adamszpilewicz/Documents/languages/golang/vue-app/database-extractor-app/frontend/src/components/TableInfoComponent.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-4\">\n    <div class=\"shadow p-4 bg-white rounded\">\n      <!-- Download button placed above the table -->\n      <div class=\"mb-3 text-right\">\n        <button @click=\"downloadCSV\" class=\"btn btn-primary\">Download CSV</button>\n      </div>\n\n      <table class=\"table table-hover table-striped\">\n        <thead class=\"thead-dark\">\n        <tr>\n          <th>Table Name</th>\n          <th>Column Name</th>\n          <th>Column Type</th>\n          <th>Primary Key</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr v-for=\"column in columns\" :key=\"column.column_name\">\n          <td>{{ tableName }}</td>\n          <td>{{ column.column_name }}</td>\n          <td>{{ column.column_type }}</td>\n          <td>\n            <span v-if=\"column.primary_key === 'YES'\">\n              <img src=\"@/assets/key.png\" alt=\"Primary Key\" style=\"height: 16px; width: 32px; vertical-align: middle;\">\n              YES\n            </span>\n            <span v-else>NO</span>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n\n<script>\nexport default {\n  props: ['tableName'],\n  data() {\n    return {\n      columns: [] // for storing columns info\n    };\n  },\n  created() {\n    this.loadColumns();\n  },\n  methods: {\n    loadColumns() {\n      const creds = this.$store.state.credentials;\n\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(creds)\n      };\n\n      fetch(`http://localhost:8081/schemas/${this.tableName}`, requestOptions)\n          .then(response => {\n            if (!response.ok) {\n              return response.text().then(text => {\n                throw new Error(`Server error: ${text}`);\n              });\n            }\n            return response.json();\n          })\n          .then(data => {\n            if (!data.error && data.columns) {\n              this.columns = data.columns;\n            } else {\n              console.error(data.message);\n            }\n          })\n          .catch(error => console.error('Error fetching column data:', error));\n    },\n\n    downloadCSV() {\n      const creds = this.$store.state.credentials;\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(creds)\n      };\n\n      fetch(`http://localhost:8081/download/${this.tableName}`, requestOptions)\n          .then(response => response.blob())\n          .then(blob => {\n            const url = window.URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.href = url;\n            a.download = `${this.tableName}.csv`;\n            a.click();\n          })\n          .catch(error => console.error('Error downloading CSV:', error));\n    }\n\n  }\n}\n</script>\n\n"],"mappings":";OAwBmBA,UAAsB;;EAvBlCC,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAA6B;;EAEjCA,KAAK,EAAC;AAAiB;;EAIrBA,KAAK,EAAC;AAAiC;gCAC5CC,mBAAA,CAOQ;EAPDD,KAAK,EAAC;AAAY,I,aACzBC,mBAAA,CAKK,a,aAJHA,mBAAA,CAAmB,YAAf,YAAU,G,aACdA,mBAAA,CAAoB,YAAhB,aAAW,G,aACfA,mBAAA,CAAoB,YAAhB,aAAW,G,aACfA,mBAAA,CAAoB,YAAhB,aAAW,E;;;;gCAUXA,mBAAA,CAAyG;EAApGC,GAAsB,EAAtBH,UAAsB;EAACI,GAAG,EAAC,aAAa;EAACC,KAA0D,EAA1D;IAAA;IAAA;IAAA;EAAA;;;;;;uBAvB1DC,mBAAA,CAgCM,OAhCNC,UAgCM,GA/BJL,mBAAA,CA8BM,OA9BNM,UA8BM,GA7BJC,mBAAA,4CAA+C,EAC/CP,mBAAA,CAEM,OAFNQ,UAEM,GADJR,mBAAA,CAA0E;IAAjES,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;IAAEZ,KAAK,EAAC;KAAkB,cAAY,E,GAGnEC,mBAAA,CAuBQ,SAvBRc,UAuBQ,GAtBNC,UAOQ,EACRf,mBAAA,CAaQ,iB,kBAZRI,mBAAA,CAWKY,SAAA,QAAAC,WAAA,CAXgBC,KAAA,CAAAC,OAAO,EAAjBC,MAAM;yBAAjBhB,mBAAA,CAWK;MAX0BiB,GAAG,EAAED,MAAM,CAACE;QACzCtB,mBAAA,CAAwB,YAAAuB,gBAAA,CAAjBC,MAAA,CAAAC,SAAS,kBAChBzB,mBAAA,CAAiC,YAAAuB,gBAAA,CAA1BH,MAAM,CAACE,WAAW,kBACzBtB,mBAAA,CAAiC,YAAAuB,gBAAA,CAA1BH,MAAM,CAACM,WAAW,kBACzB1B,mBAAA,CAMK,aALSoB,MAAM,CAACO,WAAW,c,cAA9BvB,mBAAA,CAGO,QAAAwB,UAAA,GAFLC,UAAyG,E,iBAAA,OAE3G,E,oBACAzB,mBAAA,CAAsB,QAAA0B,UAAA,EAAT,IAAE,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}