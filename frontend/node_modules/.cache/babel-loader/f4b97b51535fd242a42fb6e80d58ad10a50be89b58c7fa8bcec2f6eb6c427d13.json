{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-310ace7d\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container mt-4\"\n};\nconst _hoisted_2 = {\n  class: \"shadow p-4 bg-white rounded\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"mb-3\"\n}, \"Database Views\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"table table-bordered table-striped table-hover\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"thead-dark\"\n}, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"View Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Owner\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Definition\")])], -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"definition-column\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.loadViews && $options.loadViews(...args)),\n    class: \"btn btn-primary mb-3\"\n  }, \"Reload\"), _hoisted_4, _createCommentVNode(\" Table to display the views \"), _createElementVNode(\"table\", _hoisted_5, [_hoisted_6, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.views, view => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: view.view_name\n    }, [_createElementVNode(\"td\", null, _toDisplayString(view.view_name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(view.owner), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_7, [_createElementVNode(\"pre\", null, _toDisplayString(view.definition), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","onClick","_cache","args","$options","loadViews","_hoisted_4","_createCommentVNode","_hoisted_5","_hoisted_6","_Fragment","_renderList","$data","views","view","key","view_name","_toDisplayString","owner","_hoisted_7","definition"],"sources":["/Users/adamszpilewicz/Documents/languages/golang/vue-app/database-extractor-app/frontend/src/components/AppViews.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-4\">\n    <div class=\"shadow p-4 bg-white rounded\">\n      <h1 class=\"mb-3\">Database Views</h1>\n      <button @click=\"loadViews\" class=\"btn btn-primary mb-3\">Reload</button>\n      <hr>\n\n      <!-- Table to display the views -->\n      <table class=\"table table-bordered table-striped table-hover\">\n        <thead class=\"thead-dark\">\n        <tr>\n          <th>View Name</th>\n          <th>Owner</th>\n          <th>Definition</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr v-for=\"view in views\" :key=\"view.view_name\">\n          <td>{{ view.view_name }}</td>\n          <td>{{ view.owner }}</td>\n          <td class=\"definition-column\">\n            <pre>{{ view.definition }}</pre>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      views: []\n    };\n  },\n  beforeMount() {\n    this.loadViews();\n  },\n  methods: {\n    loadViews() {\n      const creds = this.$store.state.credentials;\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(creds)\n      };\n\n      fetch('http://localhost:8081/views', requestOptions)\n          .then(response => response.json())\n          .then(data => {\n            this.views = data.data; // use the \"data\" property from the response\n          })\n          .catch(error => console.error('Error fetching view data:', error));\n    }\n  }\n}\n</script>\n\n<style scoped>\n.definition-column pre {\n  white-space: pre-wrap;\n  max-height: 100px;\n  overflow-y: auto;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAA6B;gEACtCC,mBAAA,CAAoC;EAAhCD,KAAK,EAAC;AAAM,GAAC,gBAAc;gEAE/BC,mBAAA,CAAI;;EAGGD,KAAK,EAAC;AAAgD;gEAC3DC,mBAAA,CAMQ;EANDD,KAAK,EAAC;AAAY,I,aACzBC,mBAAA,CAIK,a,aAHHA,mBAAA,CAAkB,YAAd,WAAS,G,aACbA,mBAAA,CAAc,YAAV,OAAK,G,aACTA,mBAAA,CAAmB,YAAf,YAAU,E;;EAOVD,KAAK,EAAC;AAAmB;;uBAnBrCE,mBAAA,CA0BM,OA1BNC,UA0BM,GAzBJF,mBAAA,CAwBM,OAxBNG,UAwBM,GAvBJC,UAAoC,EACpCJ,mBAAA,CAAuE;IAA9DK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;IAAER,KAAK,EAAC;KAAuB,QAAM,GAC9DW,UAAI,EAEJC,mBAAA,gCAAmC,EACnCX,mBAAA,CAiBQ,SAjBRY,UAiBQ,GAhBNC,UAMQ,EACRb,mBAAA,CAQQ,iB,kBAPRC,mBAAA,CAMKa,SAAA,QAAAC,WAAA,CANcC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAfjB,mBAAA,CAMK;MANsBkB,GAAG,EAAED,IAAI,CAACE;QACnCpB,mBAAA,CAA6B,YAAAqB,gBAAA,CAAtBH,IAAI,CAACE,SAAS,kBACrBpB,mBAAA,CAAyB,YAAAqB,gBAAA,CAAlBH,IAAI,CAACI,KAAK,kBACjBtB,mBAAA,CAEK,MAFLuB,UAEK,GADHvB,mBAAA,CAAgC,aAAAqB,gBAAA,CAAxBH,IAAI,CAACM,UAAU,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}