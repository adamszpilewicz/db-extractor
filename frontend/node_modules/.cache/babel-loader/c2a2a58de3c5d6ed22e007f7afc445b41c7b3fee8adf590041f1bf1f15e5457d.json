{"ast":null,"code":"export default {\n  data() {\n    return {\n      dbInfo: {}\n    };\n  },\n  beforeMount() {\n    this.loadDBInfo();\n  },\n  methods: {\n    loadDBInfo() {\n      const creds = this.$store.state.credentials;\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(creds)\n      };\n      fetch('http://localhost:8081/dbinfo', requestOptions).then(response => response.json()).then(data => {\n        this.dbInfo = data.data; // use the \"data\" property from the response\n      }).catch(error => console.error('Error fetching database info:', error));\n    }\n  }\n};","map":{"version":3,"names":["data","dbInfo","beforeMount","loadDBInfo","methods","creds","$store","state","credentials","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","catch","error","console"],"sources":["/Users/adamszpilewicz/Documents/languages/golang/vue-app/database-extractor-app/frontend/src/components/AppInfo.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-4\">\n    <div class=\"shadow p-4 bg-white rounded\">\n      <h1 class=\"mb-3\">Database Information</h1>\n      <button @click=\"loadDBInfo\" class=\"btn btn-primary mb-3\">Reload</button>\n      <hr>\n\n      <!-- Card to display the database info -->\n      <div class=\"card\" v-for=\"(value, key) in dbInfo\" :key=\"key\">\n        <div class=\"card-header\">{{ key }}</div>\n        <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item\">{{ getDisplayValue(value) }}</li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      dbInfo: {}\n    };\n  },\n  beforeMount() {\n    this.loadDBInfo();\n  },\n  methods: {\n    loadDBInfo() {\n      const creds = this.$store.state.credentials;\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(creds)\n      };\n\n      fetch('http://localhost:8081/dbinfo', requestOptions)\n          .then(response => response.json())\n          .then(data => {\n            this.dbInfo = data.data; // use the \"data\" property from the response\n          })\n          .catch(error => console.error('Error fetching database info:', error));\n    }\n  }\n}\n</script>\n\n<style scoped>\n.card {\n  margin-bottom: 10px;\n}\n</style>\n"],"mappings":"AAmBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,CAAC;IACX,CAAC;EACH,CAAC;EACDC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,UAAU,CAAC,CAAC;EACnB,CAAC;EACDC,OAAO,EAAE;IACPD,UAAUA,CAAA,EAAG;MACX,MAAME,KAAI,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,WAAW;MAC3C,MAAMC,cAAa,GAAI;QACrBC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,KAAK;MAC5B,CAAC;MAEDU,KAAK,CAAC,8BAA8B,EAAEN,cAAc,EAC/CO,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAChCF,IAAI,CAAChB,IAAG,IAAK;QACZ,IAAI,CAACC,MAAK,GAAID,IAAI,CAACA,IAAI,EAAE;MAC3B,CAAC,EACAmB,KAAK,CAACC,KAAI,IAAKC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC,CAAC;IAC5E;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}