{"ast":null,"code":"export default {\n  data() {\n    return {\n      dbStats: {}\n    };\n  },\n  beforeMount() {\n    this.loadDBStats();\n  },\n  methods: {\n    loadDBStats() {\n      const creds = this.$store.state.credentials;\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(creds)\n      };\n      fetch('http://localhost:8081/db-stats', requestOptions).then(response => response.json()).then(data => {\n        this.dbStats = data.data;\n      }).catch(error => console.error('Error fetching database statistics:', error));\n    },\n    getDisplayValue(value) {\n      if (value && value.Valid) {\n        return value.String;\n      }\n      return value;\n    },\n    formatKey(key) {\n      return key.replace(/([A-Z])/g, ' $1') // insert a space before all capital letters\n      .replace(/^./, str => str.toUpperCase()); // capitalize the first letter\n    }\n  }\n};","map":{"version":3,"names":["data","dbStats","beforeMount","loadDBStats","methods","creds","$store","state","credentials","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","catch","error","console","getDisplayValue","value","Valid","String","formatKey","key","replace","str","toUpperCase"],"sources":["/Users/adamszpilewicz/Documents/languages/golang/vue-app/database-extractor-app/frontend/src/components/AppStats.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-4\">\n    <div class=\"shadow p-4 bg-white rounded\">\n      <h1 class=\"mb-3\">Database Statistics</h1>\n      <button @click=\"loadDBStats\" class=\"btn btn-primary mb-3\">Reload</button>\n      <hr>\n\n      <!-- Card to display the database statistics -->\n      <div class=\"card mb-3\" v-for=\"(value, key) in dbStats\" :key=\"key\">\n        <div class=\"card-header custom-header\">\n          <strong>{{ formatKey(key) }}</strong>\n        </div>\n        <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item\">{{ getDisplayValue(value) }}</li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      dbStats: {}\n    };\n  },\n  beforeMount() {\n    this.loadDBStats();\n  },\n  methods: {\n    loadDBStats() {\n      const creds = this.$store.state.credentials;\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(creds)\n      };\n\n      fetch('http://localhost:8081/db-stats', requestOptions)\n          .then(response => response.json())\n          .then(data => {\n            this.dbStats = data.data;\n          })\n          .catch(error => console.error('Error fetching database statistics:', error));\n    },\n    getDisplayValue(value) {\n      if (value && value.Valid) {\n        return value.String;\n      }\n      return value;\n    },\n    formatKey(key) {\n      return key.replace(/([A-Z])/g, ' $1') // insert a space before all capital letters\n          .replace(/^./, str => str.toUpperCase()); // capitalize the first letter\n    }\n  }\n}\n</script>\n\n<style scoped>\n.card {\n  margin-bottom: 10px;\n}\n</style>\n"],"mappings":"AAqBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,CAAC;IACZ,CAAC;EACH,CAAC;EACDC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB,CAAC;EACDC,OAAO,EAAE;IACPD,WAAWA,CAAA,EAAG;MACZ,MAAME,KAAI,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,WAAW;MAC3C,MAAMC,cAAa,GAAI;QACrBC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,KAAK;MAC5B,CAAC;MAEDU,KAAK,CAAC,gCAAgC,EAAEN,cAAc,EACjDO,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAChCF,IAAI,CAAChB,IAAG,IAAK;QACZ,IAAI,CAACC,OAAM,GAAID,IAAI,CAACA,IAAI;MAC1B,CAAC,EACAmB,KAAK,CAACC,KAAI,IAAKC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC,CAAC;IAClF,CAAC;IACDE,eAAeA,CAACC,KAAK,EAAE;MACrB,IAAIA,KAAI,IAAKA,KAAK,CAACC,KAAK,EAAE;QACxB,OAAOD,KAAK,CAACE,MAAM;MACrB;MACA,OAAOF,KAAK;IACd,CAAC;IACDG,SAASA,CAACC,GAAG,EAAE;MACb,OAAOA,GAAG,CAACC,OAAO,CAAC,UAAU,EAAE,KAAK,EAAE;MAAA,CACjCA,OAAO,CAAC,IAAI,EAAEC,GAAE,IAAKA,GAAG,CAACC,WAAW,CAAC,CAAC,CAAC,EAAE;IAChD;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}