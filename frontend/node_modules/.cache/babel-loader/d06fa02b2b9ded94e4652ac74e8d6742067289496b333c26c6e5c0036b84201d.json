{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-428d03b4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Custom Query\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"form-group mt-3\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"sqlQuery\"\n}, \"Enter your SQL Query:\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"textarea\", {\n    class: \"form-control\",\n    id: \"sqlQuery\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.query = $event),\n    rows: \"4\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.query]])]), _createElementVNode(\"button\", {\n    class: \"btn btn-primary mt-3\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.sendQuery && $options.sendQuery(...args))\n  }, \"Execute\")]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","id","$data","query","$event","rows","onClick","_cache","args","$options","sendQuery"],"sources":["/Users/adamszpilewicz/Documents/languages/golang/vue-app/database-extractor-app/frontend/src/components/AppCustomQuery.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <h2>Custom Query</h2>\n    <div class=\"form-group mt-3\">\n      <label for=\"sqlQuery\">Enter your SQL Query:</label>\n      <textarea class=\"form-control\" id=\"sqlQuery\" v-model=\"query\" rows=\"4\"></textarea>\n    </div>\n    <button class=\"btn btn-primary mt-3\" @click=\"sendQuery\">Execute</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      query: '',\n      result: ''\n    };\n  },\n  methods: {\n    async sendQuery() {\n      try {\n        const creds = this.$store.state.credentials; // Assuming you store credentials in the Vuex store\n        const dataToSend = {\n          credentials: creds,\n          query: this.query\n        };\n        const requestOptions = {\n          method: 'POST',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(dataToSend)\n        };\n\n        const response = await fetch('http://localhost:8081/custom-query', requestOptions);\n        const result = await response.json();\n\n        // Assuming the response has a 'data' field with the query result\n        this.result = result.data;\n      } catch (error) {\n        console.error(\"Error executing query:\", error);\n      }\n    }\n  }\n}\n</script>\n\n\n<style scoped>\n/* You can add any specific styles for this component here */\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAgB;gEACzBC,mBAAA,CAAqB,YAAjB,cAAY;;EACXD,KAAK,EAAC;AAAiB;gEAC1BC,mBAAA,CAAmD;EAA5CC,GAAG,EAAC;AAAU,GAAC,uBAAqB;;;uBAH/CC,mBAAA,CAOM,OAPNC,UAOM,GANJC,UAAqB,EACrBJ,mBAAA,CAGM,OAHNK,UAGM,GAFJC,UAAmD,E,gBACnDN,mBAAA,CAAiF;IAAvED,KAAK,EAAC,cAAc;IAACQ,EAAE,EAAC,UAAU;+DAAUC,KAAA,CAAAC,KAAK,GAAAC,MAAA;IAAEC,IAAI,EAAC;iDAAZH,KAAA,CAAAC,KAAK,E,KAE7DT,mBAAA,CAAwE;IAAhED,KAAK,EAAC,sBAAsB;IAAEa,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;KAAE,SAAO,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}