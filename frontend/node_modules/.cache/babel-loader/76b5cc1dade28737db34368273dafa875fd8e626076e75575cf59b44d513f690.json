{"ast":null,"code":"export default {\n  data() {\n    return {\n      schemas: []\n    };\n  },\n  beforeMount() {\n    this.loadSchemas(); // call the method on mount\n  },\n\n  methods: {\n    loadSchemas() {\n      const creds = this.$store.state.credentials;\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(creds)\n      };\n      console.log(\"Request options: \", requestOptions);\n      fetch('http://localhost:8081/schemas', requestOptions).then(response => response.json()).then(response => {\n        this.schemas = response;\n      }).catch(error => console.log(error));\n    }\n  }\n};","map":{"version":3,"names":["data","schemas","beforeMount","loadSchemas","methods","creds","$store","state","credentials","requestOptions","method","headers","body","JSON","stringify","console","log","fetch","then","response","json","catch","error"],"sources":["/Users/adamszpilewicz/Documents/languages/golang/vue-app/database-extractor-app/frontend/src/components/AppSchemas.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <h1 class=\"mt-5 mb-3\">Schemas</h1> <!-- Adjust margin for better spacing -->\n        <button @click=\"loadSchemas\" class=\"btn btn-primary mb-3\">Reload</button> <!-- The reload button -->\n        <hr>\n\n        <!-- Table to display the schemas -->\n        <table class=\"table table-bordered table-striped table-hover\"> <!-- Added table-striped and table-hover -->\n          <thead class=\"thead-dark\"> <!-- Made the header dark for better contrast -->\n          <tr>\n            <th>Schema Name</th>\n            <th>Table</th>\n          </tr>\n          </thead>\n          <tbody>\n          <template v-for=\"schema in schemas.data\">\n            <tr v-for=\"(table, index) in schema.table_names\" :key=\"schema.schema_name + index\">\n              <td v-if=\"index === 0\" :rowspan=\"schema.table_names.length\">{{ schema.schema_name }}</td>\n              <td>\n                <router-link :to=\"'/schemas/' + table\">{{ table }}</router-link>\n              </td>\n            </tr>\n          </template>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n\n\n<script>\n\n\nexport default {\n  data() {\n    return {\n      schemas: []\n    }\n  },\n  beforeMount() {\n    this.loadSchemas(); // call the method on mount\n  },\n  methods: {\n    loadSchemas() {\n      const creds = this.$store.state.credentials;\n      const requestOptions = {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(creds)\n      };\n\n      console.log(\"Request options: \", requestOptions);\n\n      fetch('http://localhost:8081/schemas', requestOptions)\n          .then(response => response.json())\n          .then(response => {\n            this.schemas = response\n          })\n          .catch(error => console.log(error))\n    }\n  }\n}\n\n</script>\n"],"mappings":"AAsCA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,WAAW,CAAC,CAAC,EAAE;EACtB,CAAC;;EACDC,OAAO,EAAE;IACPD,WAAWA,CAAA,EAAG;MACZ,MAAME,KAAI,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,WAAW;MAC3C,MAAMC,cAAa,GAAI;QACrBC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAC,cAAc,EAAE;QAAkB,CAAC;QAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,KAAK;MAC5B,CAAC;MAEDU,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEP,cAAc,CAAC;MAEhDQ,KAAK,CAAC,+BAA+B,EAAER,cAAc,EAChDS,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAChCF,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAAClB,OAAM,GAAIkB,QAAO;MACxB,CAAC,EACAE,KAAK,CAACC,KAAI,IAAKP,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;IACxC;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}