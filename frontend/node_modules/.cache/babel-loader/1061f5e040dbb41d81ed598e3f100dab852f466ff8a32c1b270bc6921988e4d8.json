{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container mt-4\"\n};\nconst _hoisted_2 = {\n  class: \"shadow p-4 bg-white rounded\"\n};\nconst _hoisted_3 = {\n  class: \"table table-hover table-striped\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"thead-dark\"\n}, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Table Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Column Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Column Type\")])], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.columns, column => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: column.column_name\n    }, [_createElementVNode(\"td\", null, _toDisplayString($props.tableName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(column.column_name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(column.column_type), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$data","columns","column","key","column_name","_toDisplayString","$props","tableName","column_type"],"sources":["/Users/adamszpilewicz/Documents/languages/golang/vue-app/database-extractor-app/frontend/src/components/TableInfoComponent.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-4\">\n    <div class=\"shadow p-4 bg-white rounded\">\n      <table class=\"table table-hover table-striped\">\n        <thead class=\"thead-dark\">\n        <tr>\n          <th>Table Name</th>\n          <th>Column Name</th>\n          <th>Column Type</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr v-for=\"column in columns\" :key=\"column.column_name\">\n          <td>{{ tableName }}</td>\n          <td>{{ column.column_name }}</td>\n          <td>{{ column.column_type }}</td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n\n<script>\nexport default {\n  props: ['tableName'],\n  data() {\n    return {\n      columns: [] // for storing columns info\n    };\n  },\n  created() {\n    this.loadColumns();\n  },\n  methods: {\n    loadColumns() {\n      const creds = this.$store.state.credentials;\n\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(creds)\n      };\n\n      fetch(`http://localhost:8081/schemas/${this.tableName}`, requestOptions)\n          .then(response => {\n            if (!response.ok) {\n              return response.text().then(text => {\n                throw new Error(`Server error: ${text}`);\n              });\n            }\n            return response.json();\n          })\n          .then(data => {\n            if (!data.error && data.columns) {\n              this.columns = data.columns;\n            } else {\n              console.error(data.message);\n            }\n          })\n          .catch(error => console.error('Error fetching column data:', error));\n    }\n  }\n}\n</script>\n\n"],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAA6B;;EAC/BA,KAAK,EAAC;AAAiC;gCAC5CC,mBAAA,CAMQ;EANDD,KAAK,EAAC;AAAY,I,aACzBC,mBAAA,CAIK,a,aAHHA,mBAAA,CAAmB,YAAf,YAAU,G,aACdA,mBAAA,CAAoB,YAAhB,aAAW,G,aACfA,mBAAA,CAAoB,YAAhB,aAAW,E;;;uBAPvBC,mBAAA,CAmBM,OAnBNC,UAmBM,GAlBJF,mBAAA,CAiBM,OAjBNG,UAiBM,GAhBJH,mBAAA,CAeQ,SAfRI,UAeQ,GAdNC,UAMQ,EACRL,mBAAA,CAMQ,iB,kBALRC,mBAAA,CAIKK,SAAA,QAAAC,WAAA,CAJgBC,KAAA,CAAAC,OAAO,EAAjBC,MAAM;yBAAjBT,mBAAA,CAIK;MAJ0BU,GAAG,EAAED,MAAM,CAACE;QACzCZ,mBAAA,CAAwB,YAAAa,gBAAA,CAAjBC,MAAA,CAAAC,SAAS,kBAChBf,mBAAA,CAAiC,YAAAa,gBAAA,CAA1BH,MAAM,CAACE,WAAW,kBACzBZ,mBAAA,CAAiC,YAAAa,gBAAA,CAA1BH,MAAM,CAACM,WAAW,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}