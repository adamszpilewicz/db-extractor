{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-428d03b4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Custom Query\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"form-group mt-3\"\n}, [/*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"sqlQuery\"\n}, \"Enter your SQL Query:\"), /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"sqlEditor\"\n}), /*#__PURE__*/_createCommentVNode(\" CodeMirror will be attached here \")], -1 /* HOISTED */));\nconst _hoisted_4 = {\n  key: 0,\n  class: \"mt-5 d-flex justify-content-center\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"spinner-grow text-primary\",\n  role: \"status\",\n  style: {\n    \"opacity\": \"0.7\"\n  }\n}, null, -1 /* HOISTED */));\nconst _hoisted_6 = [_hoisted_5];\nconst _hoisted_7 = {\n  key: 1,\n  class: \"mt-5\"\n};\nconst _hoisted_8 = {\n  class: \"table table-striped table-bordered\"\n};\nconst _hoisted_9 = {\n  class: \"thead-dark\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createElementVNode(\"button\", {\n    class: \"btn btn-primary mt-3\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.sendQuery && $options.sendQuery(...args))\n  }, \"Execute\"), _createCommentVNode(\" Loading Spinner \"), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _hoisted_6)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Result Table \"), $data.result && $data.result.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"table\", _hoisted_8, [_createElementVNode(\"thead\", _hoisted_9, [_createElementVNode(\"tr\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(Object.keys($data.result[0]), column => {\n    return _openBlock(), _createElementBlock(\"th\", {\n      key: column\n    }, _toDisplayString(column), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.result, row => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: row.id\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(Object.keys(row), column => {\n      return _openBlock(), _createElementBlock(\"td\", {\n        key: column\n      }, _toDisplayString(row[column]), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","id","_createCommentVNode","role","style","_hoisted_5","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","onClick","_cache","args","$options","sendQuery","$data","loading","_hoisted_4","_hoisted_6","result","length","_hoisted_7","_hoisted_8","_hoisted_9","_Fragment","_renderList","Object","keys","column","key","_toDisplayString","row"],"sources":["/Users/adamszpilewicz/Documents/languages/golang/vue-app/database-extractor-app/frontend/src/components/AppCustomQuery.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <h2>Custom Query</h2>\n    <div class=\"form-group mt-3\">\n      <label for=\"sqlQuery\">Enter your SQL Query:</label>\n      <div id=\"sqlEditor\"></div> <!-- CodeMirror will be attached here -->\n    </div>\n    <button class=\"btn btn-primary mt-3\" @click=\"sendQuery\">Execute</button>\n\n    <!-- Loading Spinner -->\n    <div v-if=\"loading\" class=\"mt-5 d-flex justify-content-center\">\n      <div class=\"spinner-grow text-primary\" role=\"status\" style=\"opacity: 0.7;\"></div>\n    </div>\n\n    <!-- Result Table -->\n    <div v-if=\"result && result.length\" class=\"mt-5\">\n      <table class=\"table table-striped table-bordered\">\n        <thead class=\"thead-dark\">\n        <tr>\n          <th v-for=\"column in Object.keys(result[0])\" :key=\"column\">{{ column }}</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr v-for=\"row in result\" :key=\"row.id\">\n          <td v-for=\"column in Object.keys(row)\" :key=\"column\">{{ row[column] }}</td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport CodeMirror from \"codemirror\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/mode/sql/sql.js\";\n\nexport default {\n  data() {\n    return {\n      editor: null, // To store the CodeMirror instance\n      query: '',\n      result: [],\n      loading: false\n    };\n  },\n  mounted() {\n    this.editor = CodeMirror(document.getElementById('sqlEditor'), {\n      lineNumbers: true,\n      mode: \"text/x-mysql\",\n      value: this.query\n    });\n\n    this.editor.on(\"change\", editor => {\n      this.query = editor.getValue();\n    });\n  },\n  watch: {\n    query(newQuery) {\n      if (this.editor && this.editor.getValue() !== newQuery) {\n        this.editor.setValue(newQuery);\n      }\n    }\n  },\n  methods: {\n    async sendQuery() {\n      this.loading = true;\n      try {\n        const creds = this.$store.state.credentials;\n        const dataToSend = {\n          credentials: creds,\n          query: this.query\n        };\n        const requestOptions = {\n          method: 'POST',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(dataToSend)\n        };\n\n        const response = await fetch('http://localhost:8081/custom-query', requestOptions);\n        const result = await response.json();\n\n        this.result = result.data;\n      } catch (error) {\n        console.error(\"Error executing query:\", error);\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* Custom styles for the transparent blue spinner */\n.spinner-grow.text-primary {\n  background-color: rgba(0, 123, 255, 0.7);\n}\n\n/* Additional styles for CodeMirror (you can customize as per your need) */\n.CodeMirror {\n  border: 1px solid #eee;\n  height: auto;\n  width: 100%;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAgB;gEACzBC,mBAAA,CAAqB,YAAjB,cAAY;gEAChBA,mBAAA,CAGM;EAHDD,KAAK,EAAC;AAAiB,I,aAC1BC,mBAAA,CAAmD;EAA5CC,GAAG,EAAC;AAAU,GAAC,uBAAqB,G,aAC3CD,mBAAA,CAA0B;EAArBE,EAAE,EAAC;AAAW,I,aAAQC,mBAAA,sCAAyC,C;;;EAKlDJ,KAAK,EAAC;;gEACxBC,mBAAA,CAAiF;EAA5ED,KAAK,EAAC,2BAA2B;EAACK,IAAI,EAAC,QAAQ;EAACC,KAAqB,EAArB;IAAA;EAAA;;oBAArDC,UAAiF,C;;;EAI/CP,KAAK,EAAC;;;EACjCA,KAAK,EAAC;AAAoC;;EACxCA,KAAK,EAAC;AAAY;;uBAhB/BQ,mBAAA,CA4BM,OA5BNC,UA4BM,GA3BJC,UAAqB,EACrBC,UAGM,EACNV,mBAAA,CAAwE;IAAhED,KAAK,EAAC,sBAAsB;IAAEY,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;KAAE,SAAO,GAE/DV,mBAAA,qBAAwB,EACba,KAAA,CAAAC,OAAO,I,cAAlBV,mBAAA,CAEM,OAFNW,UAEM,EAAAC,UAAA,K,mCAENhB,mBAAA,kBAAqB,EACVa,KAAA,CAAAI,MAAM,IAAIJ,KAAA,CAAAI,MAAM,CAACC,MAAM,I,cAAlCd,mBAAA,CAaM,OAbNe,UAaM,GAZJtB,mBAAA,CAWQ,SAXRuB,UAWQ,GAVNvB,mBAAA,CAIQ,SAJRwB,UAIQ,GAHRxB,mBAAA,CAEK,c,kBADHO,mBAAA,CAA4EkB,SAAA,QAAAC,WAAA,CAAvDC,MAAM,CAACC,IAAI,CAACZ,KAAA,CAAAI,MAAM,MAA5BS,MAAM;yBAAjBtB,mBAAA,CAA4E;MAA9BuB,GAAG,EAAED;IAAM,GAAAE,gBAAA,CAAKF,MAAM;sCAGtE7B,mBAAA,CAIQ,iB,kBAHRO,mBAAA,CAEKkB,SAAA,QAAAC,WAAA,CAFaV,KAAA,CAAAI,MAAM,EAAbY,GAAG;yBAAdzB,mBAAA,CAEK;MAFsBuB,GAAG,EAAEE,GAAG,CAAC9B;2BAClCK,mBAAA,CAA2EkB,SAAA,QAAAC,WAAA,CAAtDC,MAAM,CAACC,IAAI,CAACI,GAAG,GAAzBH,MAAM;2BAAjBtB,mBAAA,CAA2E;QAAnCuB,GAAG,EAAED;MAAM,GAAAE,gBAAA,CAAKC,GAAG,CAACH,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}